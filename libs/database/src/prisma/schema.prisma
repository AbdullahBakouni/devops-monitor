generator client {
  provider = "prisma-client-js"
  output   = "../libs/database/src/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model ServiceEvent {
  id        String   @id @default(cuid())
  service   String
  status    String
  cluster   String?
  message   String?
  createdAt DateTime @default(now())
}

model Service {
  id          String   @id @default(uuid())
  name        String
  url         String
  cluster     String
  type        String
  description String?
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  dependenciesFrom ServiceDependency[] @relation("FromService")
  dependenciesTo   ServiceDependency[] @relation("ToService")
  ServiceAI        ServiceAI?
  runtimeStatus    String? // "UP" | "DOWN" | "RESTARTING" | ...
  lastReason       String? // "OOMKilled", "Exited code 137", ...
  lastSeenAt       DateTime?

  @@unique([name, cluster])
}

model ServiceDependency {
  id            String   @id @default(cuid())
  fromService   Service  @relation("FromService", fields: [fromServiceId], references: [id])
  fromServiceId String
  toService     Service  @relation("ToService", fields: [toServiceId], references: [id])
  toServiceId   String
  reason        String
  createdAt     DateTime @default(now())

  @@unique([fromServiceId, toServiceId], name: "unique_service_relation")
}

model ServiceAI {
  id              String   @id @default(uuid())
  serviceId       String   @unique
  aiData          Json
  failCount       Int      @default(0)
  lastUpdated     DateTime @default(now())
  lastRefreshedAt DateTime @default(now())

  service Service @relation(fields: [serviceId], references: [id])
}
